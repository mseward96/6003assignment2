---
title: "Assignment 2"
format: html 
editor: visual
---

Load in packages and data, recode sex as factor

```{r}
#library in packages, INTSALL if needed
library(flexplot)
library(apaTables)
library(tidyverse)
library(haven)



#load in data

Data <- read_sav("PSYR6003.A2.sav")
view(Data) #visually inspect data 

#recode sex from string to factor, using dplyr 

RecodeData<- Data  %>% mutate(sex.Dummy = if_else(sex=="Male", 1, 0))
head(RecodeData)
Data<-mutate(RecodeData,sexfactor= as_factor(sex.Dummy))
#sexfactor is now a factor variable for sex


head(Data)
```

Now will create variables for each subscale as per assignment instructions.

```{r}

#subscale total for socially prescribed perfection (SPP)
Data <- Data %>%
  mutate(spp_total = rowMeans(select(.,mps.SPP1.3y,mps.SPP2.3y,mps.SPP3.3y,mps.SPP4.3y,mps.SPP5.3y), na.rm = TRUE))
view(Data)

#subscale total for PANAS 
Data <- Data %>%
  mutate(panas_total = rowMeans(select(.,guilt1.3y,guilt2.3y,guilt3.3y,dep1.3y,dep2.3y,dep3.3y,fear1.3y,fear2.3y,fear3.3y,host1.3y,host2.3y,host3.3y), na.rm = TRUE))
view(Data)

#subscale total for cons. but first , reverse code!max +min - value
Data <- Data %>%
  mutate(reverse_disorganized= (7+1)- tipm.CONS2.3y)
view(Data)

#total for consc subscale
cleandata<- Data%>%
    mutate(cons_total = rowMeans(select(., tipm.CONS1.3y,reverse_disorganized), na.rm = TRUE))
View(cleandata)
```

part 2, calculating descriptive stats and bivariate correlations as per assignment instructions

```{r}



#correlations via apaTables
correlations <- select(cleandata, panas_total, cons_total, spp_total, sex.Dummy)

apa.cor.table(correlations, table.number = 1, filename = "correlations.doc")

cleandata %>% #getting Male Female frequency for descriptives write up
  count(sexfactor)



```

Part 3, glm for hypothesis 1, sex, conscientiousness, and SPP predicting negative affect

```{r}


##visualizing univariate distributions and model
flexplot(panas_total~1, data=cleandata)
flexplot(spp_total~1, data=cleandata)
flexplot(cons_total~1, data=cleandata)
flexplot(sexfactor~1,data=cleandata)
flexplot(panas_total~spp_total, data=cleandata)
#ID OUTLIER WITH LABEL
added.plot(panas_total~spp_total, data=cleandata,lm_formula=panas_total~sexfactor+cons_total)+
            geom_text(aes(label = RespondentId), vjust = -1, size = 3)  

###outlier identified on AVP that is causing linearity violation. 

#removing outlier case
cleandata1<-cleandata %>%
  filter(RespondentId!=3993016)

##visualize without outlier
flexplot(panas_total~1, data=cleandata1)
flexplot(spp_total~1, data=cleandata1)
flexplot(cons_total~1, data=cleandata1)
flexplot(sexfactor~1, data=cleandata1)
flexplot(panas_total~spp_total, data=cleandata1)
added.plot(panas_total~sexfactor+cons_total+spp_total, data=cleandata1)

#looks better than before

#run GLM for full and reduced model and get coefficients

fullmodel1<- lm(panas_total~cons_total+sexfactor+spp_total,data=cleandata1)
reduced1<- lm(panas_total~1,data=cleandata1)
visualize(fullmodel1) #checking assumptions 
visualize(reduced1,plots="residuals")
summary(fullmodel1)
estimates(fullmodel1)
model.comparison(reduced1,fullmodel1)

apa.reg.table(fullmodel1, filename= "fullmodel.doc", table.number = 2, prop.var.conf.level = 0.95) #apa table for regression coefficients 

#export assumption figures.
assumptionsfig1<- visualize(fullmodel1)
ggsave("flexplot1.png", plot = assumptionsfig1, width = 8, height = 6, dpi = 300)
```

Hypothesis 1 is supported as the full model is a better fit than the reduced model

Now for hypothesis 2, SPP predict NA over and above sex and cons

```{r}
#visualize
flexplot(panas_total~spp_total| cons_total+sexfactor, data=cleandata1,
         method="lm")
#we have full model from above model for hypothesis 1 , now we want to see that SPP compares over and above - we will use reduced model of negaffect~cons+sex vs full model, which includes spp above

#build reduced model
reduced2<- lm(panas_total~cons_total+sexfactor,data=cleandata1)
model.comparison(fullmodel1,reduced2) #compare
visualize(fullmodel1)
visualize(reduced2)
estimates(fullmodel1)

estimates(reduced2)

#blocking for reg table
block1<- reduced2
block2<-fullmodel1

apa.reg.table(block1,block2, table.number = 3,filename= "modelcomparison.doc") #table comparing regression coefficients

#exporting figure
assumptionsfig2<- visualize(reduced2) +theme_classic()
ggsave("flexplot3.png", plot = assumptionsfig2, width = 8, height = 6, dpi = 300)

```

Hyp 2 is supported as aic, bic, bayes, and rsq all favour the full model, and SPP predicts over and above other predictors.
