---
title: "Assignment 2"
format: html
editor: visual
---

```{r}
#install and load packages
library(flexplot)
library(tidyverse)
library(haven)
install.packages("Hmisc")
library(Hmisc)

#load in data

Data <- read_sav("PSYR6003.A2.sav")
view(Data) #visually inspect data 

#recode sex from string to factor, using dplyr 

RecodeData<- Data  %>% mutate(sex.Dummy = if_else(sex=="Male", 1, 0))
head(RecodeData)
Data<-mutate(RecodeData,sexfactor= as_factor(sex.Dummy))
#sex is now a factor, will dbl version of sex. 
Data <- mutate(Data, sex.Dummy = NULL)
view(Data)
# sex is now a factor variable with female =0 and male =1 , chr variable kept for label reminder 

head(Data)
```

Now will create variables for each subscale

```{r}

#subscale total for socially prescribed perfection (SPP)
Data <- Data %>%
  mutate(spp_total = rowMeans(select(.,mps.SPP1.3y,mps.SPP2.3y,mps.SPP3.3y,mps.SPP4.3y,mps.SPP5.3y), na.rm = TRUE))
view(Data)

#subscale total for PANAS 
Data <- Data %>%
  mutate(panas_total = rowMeans(select(.,guilt1.3y,guilt2.3y,guilt3.3y,dep1.3y,dep2.3y,dep3.3y,fear1.3y,fear2.3y,fear3.3y,host1.3y,host2.3y,host3.3y), na.rm = TRUE))
view(Data)

#subscale total for cons. but first , reverse code!max +min - value
Data <- Data %>%
  mutate(reverse_disorganized= (7+1)- tipm.CONS2.3y)
view(Data)

#total for consc subscale
cleandata<- Data%>%
    mutate(cons_total = rowMeans(select(., tipm.CONS1.3y,reverse_disorganized), na.rm = TRUE))
View(cleandata)
```

part 2, descriptive stats and bivariate correlations

```{r}
summarise(cleandata,
          mean(spp_total),
          mean(panas_total),
          mean(cons_total),
          sd(spp_total),
          sd(panas_total),
          sd(cons_total))
#correlations


correlations <- cleandata %>%
  select(spp_total,panas_total,cons_total)
cor_results <- Hmisc::rcorr(as.matrix(correlations))
view(cor_results)

####table
cor_df <- cor_results$r %>%
  as.data.frame() %>%
  tibble::rownames_to_column(var = "Variable") %>%
  pivot_longer(-Variable, names_to = "Variable2", values_to = "Correlation")

pval_df <- cor_results$P %>%
  as.data.frame() %>%
  tibble::rownames_to_column(var = "Variable") %>%
  pivot_longer(-Variable, names_to = "Variable2", values_to = "P_Value")

# Merge correlation and p-values, format in APA style
cor_table <- left_join(cor_df, pval_df, by = c("Variable", "Variable2")) %>%
  mutate(
    Correlation = sprintf("%.2f", Correlation),   # Round to 2 decimal places
    P_Value = ifelse(P_Value < 0.001, "< .001", sprintf("%.3f", P_Value)), # APA formatting
    APA_Correlation = paste0(Correlation, ifelse(P_Value < 0.05, "*", ""), 
                              ifelse(P_Value < 0.01, "*", ""), 
                              ifelse(P_Value < 0.001, "*", "")) # Add * for significance
  ) %>%
  select(Variable, Variable2, APA_Correlation) %>%
  pivot_wider(names_from = Variable2, values_from = APA_Correlation)

# Convert to an APA-style table using `flextable`
cor_table %>%
  flextable() %>%
  theme_vanilla() %>%
  autofit()
print(cor_table)


```

Part 3, glm for hypotheses

```{r}

##visualize

flexplot(panas_total~spp_total, data=cleandata)
added.plot(panas_total~spp_total, data=cleandata,lm_formula=panas_total~sexfactor+cons_total) 
```
